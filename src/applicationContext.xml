<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">


    <!--Spring入门的配置  单例 属性注入======= -->
    <!--<bean id="userDAO" class="demo1.UserDAOImpl">-->
        <!--<property name="name" value="phyger"/>-->
    <!--</bean>-->




    <!-- Spring的入门配置 单例=============== -->
    <!--<bean id="phygerUserIntImpl" class="com.phyger.UserIntImplNew"/>-->




    <!-- Spring的生命周期的配置=============== -->
    <!-- init-method在bean实例化对象的时候就会自动运行
         destroy-method在关闭工厂时候才会运行

         scope是控制单例，多例，request。session等模式的
     -->
    <!--<bean id="customerIntImpl" class="demo2.CustomerIntImpl" init-method="setUp" destroy-method="destroy" scope="prototype"/>-->



    <!-- Spring属性注入的配置================= -->
    <!-- ①构造方法的方式 -->
    <bean id="car" class="demo3.Car">
        <constructor-arg name="name" value="宝马"/>
        <constructor-arg name="price" value="2000000"/>
    </bean>

    <!-- ②set方法的方式 -->
    <bean id="car2" class="demo3.Car2">
        <property name="name" value="长安"/>
        <property name="city" value="重庆"/>
    </bean>


    <!-- set方法注入对象类型的属性================ -->
    <!-- value：设置普通类型的值；ref：这是其他类型的id或name -->
    <!-- 这里注入了上面的car对象 -->
    <bean id="employee" class="demo3.Employee">
        <property name="name" value="涛哥"/>
        <property name="car" ref="car"/>
    </bean>

    <!-- p名称空间注入方式======================== -->
    <bean id="car201" class="demo3.Car2" p:name="奇瑞QQ" p:city="北京"/>

    <bean id="employee01" class="demo3.Employee" p:car-ref="car" p:name="东哥"/>

    <!-- SpEL注入普通属性 -->
    <bean id="car202" class="demo3.Car2">
        <property name="name" value="#{'三蹦子'}"/>
        <property name="city" value="#{'宝鸡'}"/>
    </bean>

    <!-- SpEL注入对象，方法，其他对象的属性等 -->
    <bean id="employee02" class="demo3.Employee">
        <property name="name" value="#{'phyger'}"/>
        <property name="car" value="#{car}"/>
    </bean>

    <!-- 创建一个CarInfo类，并且交给Spring进行管理 -->
    <bean id="carInfo" class="demo3.CarInfo"/>

    <!-- 调用上面的CarInfo类的属性和方法使用SpEL方式进行注入 -->
    <bean id="car203" class="demo3.Car2">
        <property name="name" value="#{carInfo.name}"/>
        <property name="city" value="#{carInfo.local()}"/>
    </bean>



    <!--集合类型的属性注入-->
    <bean id="jihe" class="demo4.JiHeClass">

        <property name="arrs">
            <list>
                <value>李老板</value>
                <value>攀攀攀</value>
                <value>贺老板</value>
            </list>
        </property>

        <property name="set">
            <set>
                <value>北京</value>
                <value>西安</value>
                <value>成都</value>
            </set>
        </property>

        <property name="list">
            <list>
                <value>China</value>
                <value>American</value>
                <value>Japan</value>
            </list>
        </property>

        <property name="map">
            <map>
                <entry key="aaa" value="111"/>
                <entry key="bbb" value="222"/>
                <entry key="ccc" value="333"/>
            </map>
        </property>

    </bean>









</beans>